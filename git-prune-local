#!/bin/bash

# Check if the current branch is 'master' or 'main'
current_branch=$(git symbolic-ref --short HEAD)
if [[ "$current_branch" != "main" && "$current_branch" != "master" ]]; then
  echo "Error: You must be on the 'main' or 'master' branch to run this script."
  echo "Switch branches and try again."
  exit 1
fi

echo "Pruning remote branches..."

remote_merged_branches=$(git remote prune origin --dry-run | grep "\[would prune]" | sed "s/* \[would prune] origin\///")
remote_branches=$(git branch -r | grep -v master | grep -v main | sed "s/origin\///")
local_branches=$(git branch | grep -v master | grep -v main)

echo "Cleaning up local branches..."
echo

confirm_and_delete_branch() {
  local branch=$1
  read -p "Do you want to delete the local branch '$branch'? (y/n): " confirm
  if [[ "$confirm" =~ ^[Yy]$ ]]; then
    echo "Deleting local branch: $branch"
    git branch -D "$branch"
  else
    echo "Skipping deletion of branch: $branch"
  fi
  echo
}

for local_branch in $local_branches; do
  if ! echo "$remote_branches" | grep -qw "$local_branch"; then
    # If not on remote anymore, confirm deletion of local branch
    confirm_and_delete_branch "$local_branch"
  elif echo "$remote_merged_branches" | grep -qw "$local_branch"; then
    # If merged on remote already, confirm deletion of local branch
    confirm_and_delete_branch "$local_branch"
  fi
done

echo "Done!"
